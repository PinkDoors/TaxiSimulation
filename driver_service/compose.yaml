services:
  build:
    image: build:develop
    build:
      context: "."
      dockerfile: "deployments/build.Dockerfile"

  service:
    build:
      context: "."
      dockerfile: "deployments/init.Dockerfile"
    restart: unless-stopped
    depends_on:
      build:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    expose:
      - "9000"

  mongo:
    image: "mongo"
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_URL:  ${MONGO_EXPRESS_URI}

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./deployments/prometheus:/etc/prometheus
      - prom_data:/prometheus

#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - 3000:3000
#    restart: unless-stopped
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=grafana
#    volumes:
#      - ./grafana:/etc/grafana/provisioning/datasources

  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED = true
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
    expose:
      - "4317"

#  otel-collector:
#    image: otel/opentelemetry-collector:0.88.0
#    restart: always
#    command: ["--config=/etc/otel-collector-config.yaml"]
#    volumes:
#      - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
#    ports:
#      - "1888:1888"   # pprof extension
#      - "8888:8888"   # Prometheus metrics exposed by the collector
#      - "8889:8889"   # Prometheus exporter metrics
#      - "13133:13133" # health_check extension
#      - "4317:4317"   # OTLP gRPC receiver
#      - "55679:55679" # zpages extension
#    depends_on:
#      - jaeger-all-in-one
volumes:
  prom_data: